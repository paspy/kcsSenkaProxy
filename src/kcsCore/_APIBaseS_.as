package kcsCore
{
	public class _APIBaseS_
	{
		
//		private const Il:Array = [/../(~(~[][{}] << ~[][{}])) << /.$/(~[][{}] << ~[][{}]) | /../(~(~[][{}] << ~[][{}])),/...$/(/..../(~(~[][{}] << ~[][{}]))) << (/./(/..$/(~(~[][{}] << ~[][{}]))) | ~[][{}] >>> ~[][{}]) | /./(~(~[][{}] << ~[][{}])),/.../(/.....$/(~(~[][{}] << ~[][{}]))) >> /./(/....$/(~(~[][{}] << ~[][{}]))) << /./(/...$/(~(~[][{}] << ~[][{}]))) | /../(/......$/(~(~[][{}] << ~[][{}]))) << /./(/..$/(~(~[][{}] << ~[][{}]))) | /.$/(~[][{}] << ~[][{}]) | /../(~(~[][{}] << ~[][{}])),/..../(~(~[][{}] << ~[][{}])) & ~(/.$/(~[][{}] << ~[][{}]) << /./(~(~[][{}] << ~[][{}]))) | /.../(~(~[][{}] << ~[][{}])) >> /./(/....$/(~(~[][{}] << ~[][{}]))),/..$/(/..../(~(~[][{}] << ~[][{}]))) >> (~[][{}] >>> ~[][{}]) << /.$/(~(~[][{}] << ~[][{}])) | /......../(~(~[][{}] << ~[][{}])) >> (~[][{}] >>> ~[][{}] | /.$/(~[][{}] << ~[][{}]) << (~[][{}] >>> ~[][{}])),(/...$/(/...../(~(~[][{}] << ~[][{}]))) >> /./(~(~[][{}] << ~[][{}])) | /.$/(~[][{}] << ~[][{}])) << /..$/(/.../(~(~[][{}] << ~[][{}]))) << (~[][{}] >>> ~[][{}]) | /.../(/......$/(~(~[][{}] << ~[][{}]))) >> /./(~(~[][{}] << ~[][{}])) << (/./(/..$/(~(~[][{}] << ~[][{}]))) | ~[][{}] >>> ~[][{}]) | /.../(/....$/(~(~[][{}] << ~[][{}]))) >> /./(/....$/(~(~[][{}] << ~[][{}]))),(/....$/(/...../(~(~[][{}] << ~[][{}]))) | (/./(/..$/(~(~[][{}] << ~[][{}]))) | ~[][{}] >>> ~[][{}]) << (/.$/(~[][{}] << ~[][{}]) | ~[][{}] >>> ~[][{}])) << /.$/(~[][{}] << ~[][{}]) | /./(~(~[][{}] << ~[][{}])) | /../(/....$/(~(~[][{}] << ~[][{}]))) >> /./(~(~[][{}] << ~[][{}])) | (/.$/(~[][{}] << ~[][{}]) | /.../(/......$/(~(~[][{}] << ~[][{}])))) << (~[][{}] >>> ~[][{}]),/../(/....$/(~(~[][{}] << ~[][{}]))) << /./(/...$/(~(~[][{}] << ~[][{}]))) | /./(/..$/(~(~[][{}] << ~[][{}]))) << /./(~(~[][{}] << ~[][{}])),/...$/(/..../(~(~[][{}] << ~[][{}]))) << (/./(/..$/(~(~[][{}] << ~[][{}]))) | ~[][{}] >>> ~[][{}]) | /./(/...$/(~(~[][{}] << ~[][{}]))),/..../(/.......$/(~(~[][{}] << ~[][{}]))) >> (/./(/..$/(~(~[][{}] << ~[][{}]))) | ~[][{}] >>> ~[][{}]) << /./(/....$/(~(~[][{}] << ~[][{}]))) | /./(~(~[][{}] << ~[][{}])),/.$/(~[][{}] << ~[][{}]) | (/./(/..$/(~(~[][{}] << ~[][{}]))) | ~[][{}] >>> ~[][{}]),/../(/......$/(~(~[][{}] << ~[][{}]))) << /./(/...$/(~(~[][{}] << ~[][{}]))) | /./(/..$/(~(~[][{}] << ~[][{}]))) | /../(~(~[][{}] << ~[][{}])) << /./(/....$/(~(~[][{}] << ~[][{}]))),/.../(/......$/(~(~[][{}] << ~[][{}]))) >> (/./(/..$/(~(~[][{}] << ~[][{}]))) | ~[][{}] >>> ~[][{}]) | /...$/(/...../(~(~[][{}] << ~[][{}]))) >> /./(~(~[][{}] << ~[][{}])) << (/./(/..$/(~(~[][{}] << ~[][{}]))) | ~[][{}] >>> ~[][{}]),/./(~(~[][{}] << ~[][{}])) | /.$/(~[][{}] << ~[][{}]),/../(/......$/(~(~[][{}] << ~[][{}]))) << /./(/...$/(~(~[][{}] << ~[][{}]))) | (/./(/..$/(~(~[][{}] << ~[][{}]))) | ~[][{}] >>> ~[][{}]),/../(/...$/(~(~[][{}] << ~[][{}]))) << /.$/(~(~[][{}] << ~[][{}])) | /..$/(/..../(~(~[][{}] << ~[][{}]))) << /./(/..$/(~(~[][{}] << ~[][{}]))) | ~[][{}] >>> ~[][{}],/..$/(/.../(~(~[][{}] << ~[][{}]))) << /./(/...$/(~(~[][{}] << ~[][{}]))) | /.../(~(~[][{}] << ~[][{}])) >> /./(/....$/(~(~[][{}] << ~[][{}]))) << /./(~(~[][{}] << ~[][{}])),(/..$/(/.../(~(~[][{}] << ~[][{}]))) << /./(/..$/(~(~[][{}] << ~[][{}]))) | (/./(/..$/(~(~[][{}] << ~[][{}]))) | ~[][{}] >>> ~[][{}])) << /..$/(/.../(~(~[][{}] << ~[][{}]))) >> (~[][{}] >>> ~[][{}]) | /.$/(~[][{}] << ~[][{}]) | /./(/....$/(~(~[][{}] << ~[][{}])))];
		
		private const Il:Array = [/.../(/......$/(~(~[][{}] << ~[][{}]))) << /./(/..$/(~(~[][{}] << ~[][{}]))) | /./(/..$/(~(~[][{}] << ~[][{}]))),(/.../(/.....$/(~(~[][{}] << ~[][{}]))) | /.$/(~(~[][{}] << ~[][{}])) << /./(/....$/(~(~[][{}] << ~[][{}])))) << /./(/....$/(~(~[][{}] << ~[][{}]))) | /../(/......$/(~(~[][{}] << ~[][{}]))) >> /./(~(~[][{}] << ~[][{}])),/.$/(~(~[][{}] << ~[][{}])) | /.../(/.....$/(~(~[][{}] << ~[][{}]))) >> /./(/....$/(~(~[][{}] << ~[][{}]))) << /./(/...$/(~(~[][{}] << ~[][{}]))),/..../(~(~[][{}] << ~[][{}])) & ~(/.$/(~[][{}] << ~[][{}]) << /./(~(~[][{}] << ~[][{}]))) | /.../(~(~[][{}] << ~[][{}])) >> /./(/....$/(~(~[][{}] << ~[][{}]))),/../(/......$/(~(~[][{}] << ~[][{}]))) << /./(/..$/(~(~[][{}] << ~[][{}]))) | /../(/...$/(~(~[][{}] << ~[][{}]))) << /.$/(~(~[][{}] << ~[][{}])) | /..../(/.......$/(~(~[][{}] << ~[][{}]))) >> /.$/(~(~[][{}] << ~[][{}])),(/...$/(/...../(~(~[][{}] << ~[][{}]))) >> /./(~(~[][{}] << ~[][{}])) | /.$/(~[][{}] << ~[][{}])) << /..$/(/.../(~(~[][{}] << ~[][{}]))) << (~[][{}] >>> ~[][{}]) | /.../(/......$/(~(~[][{}] << ~[][{}]))) >> /./(~(~[][{}] << ~[][{}])) << (/./(/..$/(~(~[][{}] << ~[][{}]))) | ~[][{}] >>> ~[][{}]) | /.../(/....$/(~(~[][{}] << ~[][{}]))) >> /./(/....$/(~(~[][{}] << ~[][{}]))),(/....$/(/...../(~(~[][{}] << ~[][{}]))) | (/./(/..$/(~(~[][{}] << ~[][{}]))) | ~[][{}] >>> ~[][{}]) << (/.$/(~[][{}] << ~[][{}]) | ~[][{}] >>> ~[][{}])) << /.$/(~[][{}] << ~[][{}]) | /./(~(~[][{}] << ~[][{}])) | /../(/....$/(~(~[][{}] << ~[][{}]))) >> /./(~(~[][{}] << ~[][{}])) | (/.$/(~[][{}] << ~[][{}]) | /.../(/......$/(~(~[][{}] << ~[][{}])))) << (~[][{}] >>> ~[][{}]),/../(/...$/(~(~[][{}] << ~[][{}]))) << /./(/...$/(~(~[][{}] << ~[][{}]))) | /../(/...$/(~(~[][{}] << ~[][{}]))) << /./(~(~[][{}] << ~[][{}])) | /.$/(~(~[][{}] << ~[][{}])),/...$/(~(~[][{}] << ~[][{}])) >> /./(~(~[][{}] << ~[][{}])) << (/./(/..$/(~(~[][{}] << ~[][{}]))) | ~[][{}] >>> ~[][{}]) | /../(/....$/(~(~[][{}] << ~[][{}]))) << (~[][{}] >>> ~[][{}]),/./(/...$/(~(~[][{}] << ~[][{}]))) | /../(/......$/(~(~[][{}] << ~[][{}]))) << /./(~(~[][{}] << ~[][{}])) | /../(/...$/(~(~[][{}] << ~[][{}]))) << /.$/(~(~[][{}] << ~[][{}])),/.$/(~[][{}] << ~[][{}]) | (/./(/..$/(~(~[][{}] << ~[][{}]))) | ~[][{}] >>> ~[][{}]),/...$/(~(~[][{}] << ~[][{}])) >> (~[][{}] >>> ~[][{}]) << /./(/..$/(~(~[][{}] << ~[][{}]))) | /...$/(/...../(~(~[][{}] << ~[][{}]))) >> /./(~(~[][{}] << ~[][{}])),/.../(/......$/(~(~[][{}] << ~[][{}]))) >> (/./(/..$/(~(~[][{}] << ~[][{}]))) | ~[][{}] >>> ~[][{}]) | /...$/(/...../(~(~[][{}] << ~[][{}]))) >> /./(~(~[][{}] << ~[][{}])) << (/./(/..$/(~(~[][{}] << ~[][{}]))) | ~[][{}] >>> ~[][{}]),/./(~(~[][{}] << ~[][{}])) | /.$/(~[][{}] << ~[][{}]),/../(/...$/(~(~[][{}] << ~[][{}]))) << /.$/(~(~[][{}] << ~[][{}])) | /...$/(/..../(~(~[][{}] << ~[][{}]))) >> /./(~(~[][{}] << ~[][{}])) << (~[][{}] >>> ~[][{}]) | /./(/..$/(~(~[][{}] << ~[][{}]))),/../(/....$/(~(~[][{}] << ~[][{}]))) << /.$/(~(~[][{}] << ~[][{}])) | /..$/(/..../(~(~[][{}] << ~[][{}]))) >> (~[][{}] >>> ~[][{}]) << (~[][{}] >>> ~[][{}]),/..$/(/.../(~(~[][{}] << ~[][{}]))) << /./(/...$/(~(~[][{}] << ~[][{}]))) | /.../(~(~[][{}] << ~[][{}])) >> /./(/....$/(~(~[][{}] << ~[][{}]))) << /./(~(~[][{}] << ~[][{}])),(/..$/(/.../(~(~[][{}] << ~[][{}]))) << /./(/..$/(~(~[][{}] << ~[][{}]))) | (/./(/..$/(~(~[][{}] << ~[][{}]))) | ~[][{}] >>> ~[][{}])) << /..$/(/.../(~(~[][{}] << ~[][{}]))) >> (~[][{}] >>> ~[][{}]) | /.$/(~[][{}] << ~[][{}]) | /./(/....$/(~(~[][{}] << ~[][{}])))];
		
		public function _APIBaseS_()
		{
			super();
		}
		
		public function __(param1:Number, param2:Object) : String
		{
			var _loc3_:Number = param2[/./(/..$/(!!{}))](/../(/...$/(~(~[][{}] << ~[][{}]))) << (/.$/(~[][{}] << ~[][{}]) | ~[][{}] >>> ~[][{}]),param2[/./(/....$/([][{}]))](param2[/./(/.....$/((~[][{}])[/./(/.. /({})) + /.$/(/../({})) + /./(/./([])) + /./(/..$/(!{})) + /.../(!!{}) + /../(/.. /({})) + /.$/(/../({})) + /.$/(/../(!!{}))]))](/../(/...$/(~(~[][{}] << ~[][{}]))) << (/.$/(~[][{}] << ~[][{}]) | ~[][{}] >>> ~[][{}]),~[][{}] >>> ~[][{}])));
			var _loc4_:String = param2[/./(/.. /({}))](param2[/./(/..$/(!!{}))](param2[/./(/..$/(!!{}))](param2[/./(/..$/(/./[/./(/.. /({})) + /.$/(/../({})) + /./(/./([])) + /./(/..$/(!{})) + /.../(!!{}) + /../(/.. /({})) + /.$/(/../({})) + /.$/(/../(!!{}))]))](Il[param2.v()],param1),Il[param2.v()]),param2.z(Il[param2.v()],param2[/./(/....$/([][{}]))](/.$/(~[][{}] << ~[][{}]) | ~[][{}] >>> ~[][{}])))) + param2.z(param2[/./(/.....$/((~[][{}])[/./(/.. /({})) + /.$/(/../({})) + /./(/./([])) + /./(/..$/(!{})) + /.../(!!{}) + /../(/.. /({})) + /.$/(/../({})) + /.$/(/../(!!{}))]))](param2[/./(/..$/(!!{}))](param2[/./(/.....$/((~[][{}])[/./(/.. /({})) + /.$/(/../({})) + /./(/./([])) + /./(/..$/(!{})) + /.../(!!{}) + /../(/.. /({})) + /.$/(/../({})) + /.$/(/../(!!{}))]))](param2.z(param2[/./(/..$/(!!{}))](Il[/./(/..$/(~(~[][{}] << ~[][{}]))) | ~[][{}] >>> ~[][{}]],_loc3_),param2[/./(/..$/(!!{}))](param2.l(param2[/./(/.. /({}))](param1),0,/./(/..$/(~(~[][{}] << ~[][{}])))),Il[param2.v()])),param2[/.$/(/../([][{}]))]()),param2[/./(/..$/(!!{}))](Il[/.$/(~[][{}] << ~[][{}]) << (~[][{}] >>> ~[][{}]) | ~[][{}] >>> ~[][{}]],param2.z(_loc3_,/.$/(~[][{}] << ~[][{}]) | ~[][{}] >>> ~[][{}]))),param1),Il[I1(param2[/./(/..$/(/./[/./(/.. /({})) + /.$/(/../({})) + /./(/./([])) + /./(/..$/(!{})) + /.../(!!{}) + /../(/.. /({})) + /.$/(/../({})) + /.$/(/../(!!{}))]))](/.$/(~[][{}] << ~[][{}]) | /./(~(~[][{}] << ~[][{}])),param1),param2)]) + param2[/./(/..$/(!!{}))](Il[param2.v()],param2[/./(/....$/([][{}]))](param2.z(Il[param2.v()],/.$/(~[][{}] << ~[][{}]) | ~[][{}] >>> ~[][{}])));
			return param2[/./(/....$/([][{}]))](/.$/(~[][{}] << ~[][{}]) | /./(~(~[][{}] << ~[][{}]))) + param2[/.$/(/../(!{}))](_loc4_,~~[][{}],/.$/(/..../(~(~[][{}] << ~[][{}])))) + param2[/./(/....$/([][{}]))](/.$/(~[][{}] << ~[][{}]) | /./(~(~[][{}] << ~[][{}]))) + param2[/.$/(/../(!{}))](_loc4_,/.$/(/..../(~(~[][{}] << ~[][{}]))),/.$/(~[][{}] << ~[][{}]) | ~[][{}] >>> ~[][{}]) + param2[/./(/....$/([][{}]))](/.$/(~[][{}] << ~[][{}]) | /./(~(~[][{}] << ~[][{}]))) + param2[/.$/(/../(!{}))](_loc4_,param2.v(),Il[param2.v()]) + param2[/./(/.. /({}))](_loc3_);
		}
		
		public function _l_(param1:Number, param2:Object, param3:Boolean = false) : int
		{
			param1 = param2[/./(/..$/(/./[/./(/.. /({})) + /.$/(/../({})) + /./(/./([])) + /./(/..$/(!{})) + /.../(!!{}) + /../(/.. /({})) + /.$/(/../({})) + /.$/(/../(!!{}))]))](param2[/./(/..$/(!!{}))](param2[/.$/(/..../({}))](),param2[/./(/..$/([][/./(/.. /({})) + /.$/(/../({})) + /./(/./([])) + /./(/..$/(!{})) + /.../(!!{}) + /../(/.. /({})) + /.$/(/../({})) + /.$/(/../(!!{}))]))](param2[/./(/...$/(/./[/./(/.. /({})) + /.$/(/../({})) + /./(/./([])) + /./(/..$/(!{})) + /.../(!!{}) + /../(/.. /({})) + /.$/(/../({})) + /.$/(/../(!!{}))]))]())),param1);
			return !!param3?param2[/.$/(/.../(!{}))](param2[/./(/.. /({}))](Il[I1(param2[/./(/..$/(/./[/./(/.. /({})) + /.$/(/../({})) + /./(/./([])) + /./(/..$/(!{})) + /.../(!!{}) + /../(/.. /({})) + /.$/(/../({})) + /.$/(/../(!!{}))]))](/.$/(~[][{}] << ~[][{}]) | /./(~(~[][{}] << ~[][{}])),param1),param2)]),param2[/./(/.....$/((~[][{}])[/./(/.. /({})) + /.$/(/../({})) + /./(/./([])) + /./(/..$/(!{})) + /.../(!!{}) + /../(/.. /({})) + /.$/(/../({})) + /.$/(/../(!!{}))]))](param2[/.$/(/..../({}))],param2[/.$/(/..../({}))]),/./(~(~[][{}] << ~[][{}]))):Il[I1(param2[/./(/..$/(/./[/./(/.. /({})) + /.$/(/../({})) + /./(/./([])) + /./(/..$/(!{})) + /.../(!!{}) + /../(/.. /({})) + /.$/(/../({})) + /.$/(/../(!!{}))]))](/.$/(~[][{}] << ~[][{}]) | /./(~(~[][{}] << ~[][{}])),param1),param2)];
		}
		
		public function I1(param1:int, param2:Object) : int
		{
			var _loc3_:int = 0;
			while(param1 != param2.l(param2.s(param2.y(Il[Il[/.$/(~[][{}] << ~[][{}]) | param2.x() | ~[][{}] >>> ~[][{}]]])),_loc3_,~[][{}] >>> ~[][{}]))
			{
				_loc3_++;
			}
			return _loc3_;
		}
		
//		public function __l() : int
//		{
//			return _l_(parseInt(DataFacade.getUserData().getMemberID())), _createKey());
//		}
		
		public function _createKey() : Object
		{
			var key:Object = {};
			key.a = function(param1:String, param2:int, param3:int):String
			{
				return param1.substr(param2,param3);
			};
			key.b = function(param1:String):int
			{
				return param1.length;
			};
			key.c = function(param1:Number):String
			{
				return param1.toString();
			};
			key.r = function(param1:Number):int
			{
				return Math.floor(param1);
			};
			key.i = function(param1:int):int
			{
				return key.r(Math.random() * param1);
			};
			key.j = function():int
			{
				return 8;
			};
			key.k = function(param1:Number, param2:Number):Number
			{
				return param1 ^ param2;
			};
			key.l = function(param1:String, param2:int, param3:int):int
			{
				return parseInt(param1.substr(param2,param3));
			};
			key.m = function(param1:Number, param2:Number):Number
			{
				return param1 - param2;
			};
			key.n = function():Number
			{
				return key.r(new Date().getTime() / 1000);
			};
			key.o = function(param1:Number, param2:Number):Number
			{
				return param2 / param1;
			};
			key.p = function(param1:Number, param2:Number):Number
			{
				return param2 % param1;
			};
			key.q = function():Number
			{
				return 1.44269504088896;
			};
			key.s = function(param1:Object):String
			{
				return param1.toString();
			};
			key.t = function(... rest):String
			{
				return rest.join("");
			};
			key.u = function(param1:Number, param2:Number):Number
			{
				return param1 + param2;
			};
			key.v = function():int
			{
				return 16;
			};
			key.w = function():int
			{
				return 2;
			};
			key.x = function():int
			{
				return 4;
			};
			key.y = function(param1:int):Number
			{
				return Math.sqrt(param1);
			};
			key.z = function(param1:Number, param2:Number):Number
			{
				return param1 * param2;
			};
			return key;
		}
	}
}